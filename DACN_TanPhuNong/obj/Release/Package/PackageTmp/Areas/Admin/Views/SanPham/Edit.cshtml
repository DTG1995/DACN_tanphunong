@model DACN_TanPhuNong.Models.tb_SanPham

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Sản phẩm
        <small>Sửa sản phẩm</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "UngDung")"><i class="fa fa-dashboard"></i> Quản trị</a></li>
        <li><a href="@Url.Action("Index")"> Sản phẩm</a></li>
        <li><a class="active">Sửa sản phẩm</a></li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Sửa sản phẩm</h3>
                </div>
                <div class="box-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.MaSP)

                            <div class="form-group">
                                @Html.LabelFor(model => model.TenSanPham, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.TenSanPham, new { @class = "form-control", style = "font-weight: bold" })
                                    @Html.ValidationMessageFor(model => model.TenSanPham)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.HinhAnh, new { @class = "control-label col-md-2" })
                                <div class="col-md-7">
                                    @Html.TextBoxFor(model => model.HinhAnh, new { @class = "form-control", style = "font-weight: bold", id = "HinhAnh" })
                                    @Html.ValidationMessageFor(model => model.HinhAnh)
                                </div>
                                <div class="col-md-3">
                                    <button type="button" onclick="chosseImage('HinhAnh')" class="btn btn-primary">Chọn hình</button>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.UuDiem, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.UuDiem, new { @class = "form-control", style = "font-weight: bold; word-wrap: break-word; resize: none;" })
                                    @Html.ValidationMessageFor(model => model.UuDiem)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DacDiem, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.DacDiem, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DacDiem)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ThanhPhanChinh, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.ThanhPhanChinh, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ThanhPhanChinh)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LuuY, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.LuuY, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.LuuY)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.QuyCachDongGoi, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.QuyCachDongGoi, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.QuyCachDongGoi)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.XuatXu, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.XuatXu, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.XuatXu)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CachDung, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.CachDung, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CachDung)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.GiaThanh, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.GiaThanh, new { @class = "form-control", type = "number" })
                                    @Html.ValidationMessageFor(model => model.GiaThanh)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TrangThai, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TrangThai)
                                    @Html.ValidationMessageFor(model => model.TrangThai)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MaLoai, "Thuộc Loại", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("MaLoai", String.Empty)
                                    @Html.ValidationMessageFor(model => model.MaLoai)
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Lưu" class="btn btn-default"/>
                                </div>
                            </div>
                        </div>
                    }


                    <div>
                        @Html.ActionLink("Quay lại danh sách", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- CK Editor -->
@Scripts.Render("~/Scripts/admin/ckeditor/ckeditor.js")
<script>
    var config = {};
    config.toolbarGroups = [
            { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },
            { name: 'forms', groups: ['forms'] },
            { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },
            { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },
            { name: 'insert', groups: ['insert'] },
            { name: 'links', groups: ['links'] },
            { name: 'styles', groups: ['styles'] },
            { name: 'colors', groups: ['colors'] },
            { name: 'tools', groups: ['tools'] },
            { name: 'others', groups: ['others'] },
            { name: 'document', groups: ['document', 'mode', 'doctools'] }
    ];

    config.removeButtons = 'Templates,Save,NewPage,Preview,Print,SelectAll,Redo,Undo,PasteText,PasteFromWord,Find,Scayt,Replace,Form,Checkbox,Radio,TextField,Textarea,Select,ImageButton,HiddenField,Button,BidiRtl,BidiLtr,Language,Smiley,PageBreak,Anchor,ShowBlocks';
    config.resize_enabled = false
    CKEDITOR.replace("DacDiem", config);
    CKEDITOR.replace("ThanhPhanChinh", config);
    CKEDITOR.replace("LuuY", config);
    CKEDITOR.replace("CachDung", config);

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
